
sudo apt update && sudo apt install sudo curl unzip -y

curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install

sudo useradd --no-create-home prometheus
sudo useradd --no-create-home Node_exporter
 
sudo mkdir /etc/prometheus
sudo mkdir /var/lib/prometheus

wget https://github.com/prometheus/prometheus/releases/download/v2.36.0/prometheus-2.36.0.linux-amd64.tar.gz
tar xvfz prometheus-2.36.0.linux-amd64.tar.gz

sudo cp prometheus-2.36.0.linux-amd64/prometheus /usr/local/bin
sudo cp prometheus-2.36.0.linux-amd64/promtool /usr/local/bin/
sudo cp -r prometheus-2.36.0.linux-amd64/consoles /etc/prometheus
sudo cp -r prometheus-2.36.0.linux-amd64/console_libraries /etc/prometheus
rm -rf prometheus-2.36.0.linux-amd64.tar.gz prometheus-2.36.0.linux-amd64

wget https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz
tar xzf node_exporter-1.3.1.linux-amd64.tar.gz
sudo cp node_exporter-1.3.1.linux-amd64/node_exporter /usr/local/bin/node_exporter
rm -rf node_exporter-1.3.1.linux-amd64.tar.gz node_exporter-1.3.1.linux-amd64

sudo nano /etc/prometheus/prometheus.yml

global:
  scrape_interval: 15s
  external_labels:
    monitor: 'prometheus'

scrape_configs:
  - job_name: 'prometheus'
    ec2_sd_configs:
      - region: us-east-1
        port: 9100
        filters:
           - name: tag:Project
             values: [Udapeople]
	relabel_configs:
       - source_labels: [__meta_ec2_tag_Project, __meta_ec2_tag_Name]
         separator:"_"
         target_label: instance
       - source_labels:[__meta_ec2_instance_id]
         target_label: instance_id
       - source_labels: [__meta_ec2_public_dns_name]
         target_label: public_dns_name	   
--

- source_labels: [host, port]
  separator: "_"
  target_label: "address"
		
sudo nano /etc/systemd/system/prometheus.service

[Unit]
Description=Prometheus
Wants=network-online.target
After=network-online.target

[Service]
User=prometheus
Group=prometheus
Type=simple
ExecStart=/usr/local/bin/prometheus \
    --config.file /etc/prometheus/prometheus.yml \
    --storage.tsdb.path /var/lib/prometheus/ \
    --web.console.templates=/etc/prometheus/consoles \
    --web.console.libraries=/etc/prometheus/console_libraries

[Install]
WantedBy=multi-user.target

sudo nano /etc/systemd/system/node-exporter.service

[Unit]
Description=Prometheus Node Exporter Service
After=network.target

[Service]
User=node_exporter
Group=node_exporter
Type=simple
ExecStart=/usr/local/bin/node_exporter

[Install]
WantedBy=multi-user.target


sudo chown prometheus:prometheus /etc/prometheus
sudo chown prometheus:prometheus /usr/local/bin/prometheus
sudo chown prometheus:prometheus /usr/local/bin/promtool
sudo chown -R prometheus:prometheus /etc/prometheus/consoles
sudo chown -R prometheus:prometheus /etc/prometheus/console_libraries
sudo chown -R prometheus:prometheus /var/lib/prometheus

sudo systemctl daemon-reload
sudo systemctl enable prometheus
sudo systemctl enable node-exporter
sudo systemctl start node-exporter
sudo systemctl start prometheus
sudo systemctl status node-exporter
sudo systemctl status prometheus

sudo systemctl restart node-exporter
sudo systemctl restart prometheus

rm -rf /etc/systemd/system/node-exporter.service
rm -rf /etc/systemd/system/prometheus.service
rm -rf /etc/prometheus/prometheus.yml

For CPU 
avg(rate(node_cpu_seconds_total{mode!="idle"}[1m])) by(instance) * 100
 
For Memory free
node_memory_Cached_bytes + node_memory_Buffers_bytes + node_memory_MemFree_bytes
 
Alert Manager 
wget https://github.com/prometheus/alertmanager/releases/download/v0.24.0/alertmanager-0.24.0.linux-amd64.tar.gz
tar xvfz alertmanager-0.24.0.linux-amd64.tar.gz

sudo cp alertmanager-0.24.0.linux-amd64/alertmanager /usr/local/bin
sudo cp alertmanager-0.24.0.linux-amd64/amtool /usr/local/bin/
sudo mkdir /var/lib/alertmanager

rm -rf alertmanager* 

sudo nano /etc/prometheus/alertmanager
global:
  resolve_timeout: 1m
  slack_api_url: "https://hooks.slack.com/services/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"

route:
  receiver: "slack-notifications"

receivers:
- name: "slack-notifications"
  email_configs:
  - to: pola.gergus@gmail.com
    from: pola.gergus@gmail.com
    send_resolved: true
    smarthost: smtp.gmail.com:587
    auth_username: pola.gergus@gmail.com
    auth_identity: pola.gergus@gmail.com
    auth_password: qrxwtbowbdbusbzd

  slack_configs:
  - channel: "#alert"
    send_resolved: true
    icon_url: https://avatars3.githubusercontent.com/u/3380462
    title: |-
     [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}
     {{- if gt (len .CommonLabels) (len .GroupLabels) -}}
       {{" "}}(
       {{- with .CommonLabels.Remove .GroupLabels.Names }}
         {{- range $index, $label := .SortedPairs -}}
           {{ if $index }}, {{ end }}
           {{- $label.Name }}="{{ $label.Value -}}"
         {{- end }}
       {{- end -}}
       )
     {{- end }}
    text: >-
     {{ range .Alerts -}}
     *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}

     *Description:* {{ .Annotations.description }}

     *Details:*
       {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
       {{ end }}
     {{ end }}
	 
sudo nano /etc/systemd/system/alertmanager.service

[Unit]
Description=Alert Manager
Wants=network-online.target
After=network-online.target

[Service]
Type=simple
User=prometheus
Group=prometheus
ExecStart=/usr/local/bin/alertmanager \
  --config.file=/etc/prometheus/alertmanager.yml \
  --storage.path=/var/lib/alertmanager

Restart=always

[Install]
WantedBy=multi-user.target

sudo nano /etc/prometheus/rules.yml

groups:
- name: Down
  rules:
  - alert: InstanceDown
    expr: up == 0
    for: 3m
    labels:
      severity: 'critical'
    annotations:
      summary: "Instance  is down"
      description: " of job  has been down for more than 3 minutes."
	  
sudo chown -R prometheus:prometheus /etc/prometheus

 